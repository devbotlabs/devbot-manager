webpackJsonp([1],{113:function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var l=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=function(e,t,n){for(var r=!0;r;){var o=e,u=t,l=n;r=!1,null===o&&(o=Function.prototype);var a=Object.getOwnPropertyDescriptor(o,u);if(void 0!==a){if("value"in a)return a.value;var i=a.get;if(void 0===i)return;return i.call(l)}var c=Object.getPrototypeOf(o);if(null===c)return;e=c,t=u,n=l,r=!0,a=c=void 0}},i=n(4),c=r(i),f=function(e){function t(){o(this,t),a(Object.getPrototypeOf(t.prototype),"constructor",this).apply(this,arguments)}return u(t,e),l(t,[{key:"render",value:function(){return c["default"].createElement("div",null,c["default"].createElement("h2",null,"About"),c["default"].createElement("p",null,"This little app is rendered on the server, and then lazily loaded on the client. Go ahead and refresh here with the web inspector open. You should not get the React warning about reusing markup."),c["default"].createElement("button",{onClick:function(){return console.log("hallo!")}},"click me!"))}}]),t}(c["default"].Component);t["default"]=f,e.exports=t["default"]},116:function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var o=n(113),u=r(o);t["default"]={path:"about",component:u["default"]},e.exports=t["default"]}});